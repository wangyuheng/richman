// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/wangyuheng/richman/config"
	"github.com/wangyuheng/richman/internal/api"
	"github.com/wangyuheng/richman/internal/biz"
	"github.com/wangyuheng/richman/internal/business"
	"github.com/wangyuheng/richman/internal/client"
	"github.com/wangyuheng/richman/internal/repo"
)

// Injectors from wire.go:

func BuildRouter() api.Router {
	configConfig := config.Load()
	bills := repo.NewBills(configConfig)
	bill := biz.NewBill(configConfig, bills)
	users := repo.NewUsers(configConfig)
	user := biz.NewUser(configConfig, users)
	larkConfig := config.GetLarkConfig()
	larkClient := client.NewFeishu(larkConfig)
	larkDBConfig := config.GetLarkDBConfig()
	ledgerSvr := business.NewLedgerSvr(larkClient, larkDBConfig)
	openAICaller := client.NewOpenAICaller(configConfig)
	wechat := api.NewWechat(configConfig, bill, user, ledgerSvr, openAICaller)
	router := api.Router{
		Wechat: wechat,
	}
	return router
}

// wire.go:

var ComponentSet = wire.NewSet(config.Load, config.GetLarkConfig, config.GetLarkDBConfig, client.NewFeishu, client.NewOpenAICaller)

var ApiSet = wire.NewSet(api.NewWechat)

var BizSet = wire.NewSet(biz.NewBill, biz.NewUser, business.NewLedgerSvr)

var RepoSet = wire.NewSet(repo.NewBills, repo.NewUsers)
